import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump GameUpQt 1.0'

Module {
    dependencies: []
    Component {
        name: "GameUpQt"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["GameUpQt 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "LoginType"
            values: {
                "Anonymous": 0,
                "GameUp": 1,
                "Twitter": 2,
                "Facebook": 3,
                "Google": 4,
                "OAuth2": 5
            }
        }
        Enum {
            name: "ServerOps"
            values: {
                "Ping": 0,
                "Login": 1,
                "LeaderboardUpdate": 2,
                "GetLeaderboards": 3,
                "GamerDataUpdate": 4,
                "GamerRankUpdate": 5,
                "GamerAchievmentsUpdate": 6,
                "SetLeaderboardScore": 7
            }
        }
        Property { name: "apiKey"; type: "string" }
        Property { name: "asyncMode"; type: "bool" }
        Property { name: "gamer"; type: "Gamer"; isReadonly: true; isPointer: true }
        Property { name: "leaderboards"; type: "Leaderboard"; isList: true; isReadonly: true }
        Property { name: "webView"; type: "QQuickWebEngineView"; isPointer: true }
        Signal {
            name: "apiKeyChanged"
            Parameter { name: "apiKey"; type: "string" }
        }
        Signal {
            name: "asyncModeChanged"
            Parameter { name: "asyncMode"; type: "bool" }
        }
        Signal { name: "leaderboardChanged" }
        Signal {
            name: "pingResultChanged"
            Parameter { name: "ok"; type: "bool" }
        }
        Signal {
            name: "loginCompleted"
            Parameter { name: "token"; type: "string" }
        }
        Signal { name: "gamerLeaderboardUpdated" }
        Signal { name: "gamerDataUpdated" }
        Signal { name: "gamerRankUpdated" }
        Signal { name: "gamerAchievmentsUpdated" }
        Signal { name: "leaderboardScoreSetFinished" }
        Method { name: "ping"; type: "bool" }
        Method {
            name: "login"
            type: "string"
            Parameter { name: "loginType"; type: "LoginType" }
            Parameter { name: "username"; type: "string" }
        }
        Method {
            name: "login"
            type: "string"
            Parameter { name: "loginType"; type: "LoginType" }
        }
        Method {
            name: "addUserToken"
            Parameter { name: "username"; type: "string" }
            Parameter { name: "token"; type: "string" }
        }
        Method {
            name: "updateGamerLeaderboard"
            Parameter { name: "username"; type: "string" }
        }
        Method {
            name: "updateGamerAchievments"
            Parameter { name: "username"; type: "string" }
        }
        Method {
            name: "updateGamerRank"
            Parameter { name: "username"; type: "string" }
        }
        Method {
            name: "updateGamerData"
            Parameter { name: "username"; type: "string" }
        }
        Method {
            name: "updateLeaderboards"
            Parameter { name: "username"; type: "string" }
        }
        Method {
            name: "setLeaderboardScore"
            Parameter { name: "username"; type: "string" }
            Parameter { name: "leaderboardId"; type: "string" }
            Parameter { name: "score"; type: "int" }
            Parameter { name: "metadata"; type: "string" }
        }
        Method {
            name: "setAsyncMode"
            Parameter { name: "asyncMode"; type: "bool" }
        }
        Method {
            name: "leaderboard"
            type: "Leaderboard*"
            Parameter { name: "id"; type: "string" }
        }
        Method {
            name: "setWebView"
            Parameter { name: "webView"; type: "QQuickWebEngineView"; isPointer: true }
        }
    }
    Component {
        name: "Gamer"
        prototype: "QObject"
        exports: ["Gamer 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "nickname"; type: "string" }
        Property { name: "name"; type: "string" }
        Property { name: "timezone"; type: "int" }
        Property { name: "location"; type: "string" }
        Property { name: "locale"; type: "string" }
        Property { name: "createdAt"; type: "QDateTime" }
        Property { name: "gamerLeaderboard"; type: "GamerLeaderboard"; isReadonly: true; isPointer: true }
        Property { name: "achievments"; type: "GamerAchievments"; isList: true; isReadonly: true }
        Signal {
            name: "nicknameChanged"
            Parameter { name: "nickname"; type: "string" }
        }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "timezoneChanged"
            Parameter { name: "timezone"; type: "int" }
        }
        Signal {
            name: "locationChanged"
            Parameter { name: "location"; type: "string" }
        }
        Signal {
            name: "localeChanged"
            Parameter { name: "locale"; type: "string" }
        }
        Signal {
            name: "createdAtChanged"
            Parameter { name: "createdAt"; type: "QDateTime" }
        }
        Signal {
            name: "gamerLeaderboardChanged"
            Parameter { name: "gamerLeaderboard"; type: "GamerLeaderboard"; isPointer: true }
        }
        Method {
            name: "setNickname"
            Parameter { name: "nickname"; type: "string" }
        }
        Method {
            name: "setName"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "setTimezone"
            Parameter { name: "timezone"; type: "int" }
        }
        Method {
            name: "setLocation"
            Parameter { name: "location"; type: "string" }
        }
        Method {
            name: "setLocale"
            Parameter { name: "locale"; type: "string" }
        }
        Method {
            name: "setCreatedAt"
            Parameter { name: "createdAt"; type: "QDateTime" }
        }
    }
    Component {
        name: "Leaderboard"
        prototype: "QObject"
        exports: ["Leaderboard 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "id"; type: "string" }
        Property { name: "name"; type: "string" }
        Property { name: "public_id"; type: "string" }
        Property { name: "sort"; type: "string" }
        Property { name: "type"; type: "string" }
        Property { name: "displayHint"; type: "string" }
        Property { name: "tags"; type: "QStringList" }
        Property { name: "limit"; type: "int" }
        Property { name: "entries"; type: "LeaderboardEntry"; isList: true; isReadonly: true }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "public_idChanged"
            Parameter { name: "public_id"; type: "string" }
        }
        Signal {
            name: "sortChanged"
            Parameter { name: "sort"; type: "string" }
        }
        Signal {
            name: "typeChanged"
            Parameter { name: "type"; type: "string" }
        }
        Signal {
            name: "displayHintChanged"
            Parameter { name: "displayHint"; type: "string" }
        }
        Signal {
            name: "tagsChanged"
            Parameter { name: "tags"; type: "QStringList" }
        }
        Signal {
            name: "limitChanged"
            Parameter { name: "limit"; type: "int" }
        }
        Signal {
            name: "idChanged"
            Parameter { name: "id"; type: "string" }
        }
        Method {
            name: "setName"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "setPublic_id"
            Parameter { name: "public_id"; type: "string" }
        }
        Method {
            name: "setSort"
            Parameter { name: "sort"; type: "string" }
        }
        Method {
            name: "setType"
            Parameter { name: "type"; type: "string" }
        }
        Method {
            name: "setDisplayHint"
            Parameter { name: "displayHint"; type: "string" }
        }
        Method {
            name: "setTags"
            Parameter { name: "tags"; type: "QStringList" }
        }
        Method {
            name: "setLimit"
            Parameter { name: "limit"; type: "int" }
        }
        Method {
            name: "setId"
            Parameter { name: "id"; type: "string" }
        }
    }
    Component {
        name: "LeaderboardEntry"
        prototype: "QObject"
        exports: ["LeaderboardEntry 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "rank"; type: "int" }
        Property { name: "name"; type: "string" }
        Property { name: "score"; type: "int" }
        Property { name: "metadata"; type: "string" }
        Property { name: "scoreAt"; type: "QDateTime" }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "scoreChanged"
            Parameter { name: "score"; type: "int" }
        }
        Signal {
            name: "scoreAtChanged"
            Parameter { name: "scoreAt"; type: "QDateTime" }
        }
        Signal {
            name: "metadataChanged"
            Parameter { name: "metadata"; type: "string" }
        }
        Signal {
            name: "rankChanged"
            Parameter { name: "rank"; type: "int" }
        }
        Method {
            name: "setName"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "setScore"
            Parameter { name: "score"; type: "int" }
        }
        Method {
            name: "setScoreAt"
            Parameter { name: "scoreAt"; type: "QDateTime" }
        }
        Method {
            name: "setMetadata"
            Parameter { name: "metadata"; type: "string" }
        }
        Method {
            name: "setRank"
            Parameter { name: "rank"; type: "int" }
        }
    }
}
